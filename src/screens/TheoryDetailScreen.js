import React from 'react';
import { ScrollView } from 'react-native';
import {
  Box,
  Text,
  VStack,
  HStack,
  Pressable,
  Icon,
  useColorModeValue,
  Heading,
  // Card,
} from 'native-base';
import { MaterialIcons } from '@expo/vector-icons';

const TheoryDetailScreen = ({ route, navigation }) => {
  const { section, topic } = route.params;
  
  const bgColor = useColorModeValue('white', 'gray.800');
  const cardBgColor = useColorModeValue('white', 'gray.700');
  const textColor = useColorModeValue('gray.800', 'white');
  const subtitleColor = useColorModeValue('gray.600', 'gray.300');
  
  // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏§‡∏©‡∏é‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
  const theoryContent = {
    'props-basics': {
      title: 'Props Basics: ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô Props',
      content: [
        {
          subtitle: 'Props ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?',
          description: 'Props (Properties) ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Parent Component ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Child Component',
          details: [
            'üì¶ Props = Properties (‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥)',
            'üîÑ ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ö‡∏ô‡∏•‡∏á‡∏•‡πà‡∏≤‡∏á (Top-down)',
            'üìù Props ‡πÄ‡∏õ‡πá‡∏ô Read-only (‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)',
            'üß© ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Components',
            'üéØ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ Components ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡πÑ‡∏î‡πâ'
          ],
          code: `// Parent Component
const ParentComponent = () => {
  return (
    <ChildComponent
      name="‡∏™‡∏°‡∏ä‡∏≤‡∏¢"
      age={25}
      isActive={true}
    />
  );
};

// Child Component
const ChildComponent = (props) => {
  return (
    <View>
      <Text>‡∏ä‡∏∑‡πà‡∏≠: {props.name}</Text>
      <Text>‡∏≠‡∏≤‡∏¢‡∏∏: {props.age}</Text>
      <Text>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {props.isActive ? '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : '‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'}</Text>
    </View>
  );
};`
        },
        {
          subtitle: '‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Props',
          description: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö Props ‡πÉ‡∏ô React Native Components',
          details: [
            'üì§ ‡∏™‡πà‡∏á Props ‡∏à‡∏≤‡∏Å Parent Component',
            'üì• ‡∏£‡∏±‡∏ö Props ‡πÉ‡∏ô Child Component',
            'üéØ ‡πÉ‡∏ä‡πâ Destructuring ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Props ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢',
            '‚ö° ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó (string, number, boolean, object, function)',
            'üîÑ ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Props ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Child Component ‡∏à‡∏∞ re-render'
          ]
        }
      ]
    },
    'context-api': {
      title: 'Context API: ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Global State',
      content: [
        {
          subtitle: 'Context API ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?',
          description: 'Context API ‡∏ä‡πà‡∏ß‡∏¢‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Global State ‡πÅ‡∏•‡∏∞‡∏•‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Prop Drilling',
          details: [
            'üåç Context = ‡∏ö‡∏£‡∏¥‡∏ö‡∏ó (‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°)',
            'üìä ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Global State',
            'üîÑ ‡∏•‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Prop Drilling',
            'üéØ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ',
            '‚ö° ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤ Redux ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏õ‡πÄ‡∏•‡πá‡∏Å-‡∏Å‡∏•‡∏≤‡∏á'
          ],
          code: `// 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Context
import React, { createContext, useContext, useState } from 'react';

const UserContext = createContext();

// 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Provider Component
export const UserProvider = ({ children }) => {
  const [user, setUser] = useState(null);
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  const login = (userData) => {
    setUser(userData);
    setIsLoggedIn(true);
  };

  const logout = () => {
    setUser(null);
    setIsLoggedIn(false);
  };

  return (
    <UserContext.Provider value={{
      user,
      isLoggedIn,
      login,
      logout
    }}>
      {children}
    </UserContext.Provider>
  );
};

// 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Custom Hook
export const useUser = () => {
  const context = useContext(UserContext);
  if (!context) {
    throw new Error('useUser must be used within UserProvider');
  }
  return context;
};`
        }
      ]
    },
    'navigation-basics': {
      title: 'React Navigation: ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô Navigation',
      content: [
        {
          subtitle: 'React Navigation ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?',
          description: 'React Navigation ‡πÄ‡∏õ‡πá‡∏ô library ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ navigation ‡πÉ‡∏ô React Native',
          details: [
            'üß≠ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠',
            'üì± ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á iOS ‡πÅ‡∏•‡∏∞ Android',
            '‚ö° Performance ‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢',
            'üé® Customizable ‡πÅ‡∏•‡∏∞ Flexible',
            'üîÑ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Deep Linking ‡πÅ‡∏•‡∏∞ URL-based navigation'
          ],
          code: `// ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á React Navigation
npm install @react-navigation/native
npm install @react-navigation/stack
npm install react-native-screens react-native-safe-area-context

// ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Expo
npx expo install @react-navigation/native
npx expo install @react-navigation/stack
npx expo install react-native-screens react-native-safe-area-context`
        },
        {
          subtitle: '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á Navigator',
          description: 'React Navigation ‡∏°‡∏µ Navigator ‡∏´‡∏•‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó',
          details: [
            'üìö Stack Navigator - ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÅ‡∏ö‡∏ö Stack (‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)',
            'üìã Tab Navigator - ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÅ‡∏ö‡∏ö Tab (‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ó‡πá‡∏ö)',
            'üóÇÔ∏è Drawer Navigator - ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÅ‡∏ö‡∏ö Drawer (‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á)',
            'üîÑ Switch Navigator - ‡∏™‡∏•‡∏±‡∏ö‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Navigator',
            'üåê Web Navigator - ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Web Platform'
          ]
        }
      ]
    },
    'state-management': {
      title: 'State Management: ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ State',
      content: [
        {
          subtitle: 'State ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?',
          description: 'State ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏î‡πâ‡πÉ‡∏ô Component',
          details: [
            'üìä State = ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏î‡πâ',
            'üîÑ ‡πÄ‡∏°‡∏∑‡πà‡∏≠ State ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Component ‡∏à‡∏∞ re-render',
            'üéØ ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÉ‡∏ô Component',
            '‚ö° useState ‡πÄ‡∏õ‡πá‡∏ô Hook ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ State',
            'üß© State ‡πÄ‡∏õ‡πá‡∏ô Local ‡∏ï‡πà‡∏≠ Component ‡∏ô‡∏±‡πâ‡∏ô‡πÜ'
          ],
          code: `// ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ useState
import React, { useState } from 'react';

const CounterComponent = () => {
  const [count, setCount] = useState(0);
  const [name, setName] = useState('');
  const [isActive, setIsActive] = useState(false);

  const increment = () => {
    setCount(count + 1);
  };

  const decrement = () => {
    setCount(count - 1);
  };

  return (
    <View>
      <Text>Count: {count}</Text>
      <Button onPress={increment}>‡πÄ‡∏û‡∏¥‡πà‡∏°</Button>
      <Button onPress={decrement}>‡∏•‡∏î</Button>
    </View>
  );
};`
        },
        {
          subtitle: 'Local vs Global State',
          description: '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Local ‡πÅ‡∏•‡∏∞ Global State',
          details: [
            'üì¶ Local State: ‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô Component ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß',
            'üåç Global State: ‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏´‡∏•‡∏≤‡∏¢ Components',
            'üîÑ Local State ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ Component re-render',
            '‚ö° Global State ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≤‡∏Å Provider',
            'üéØ ‡πÉ‡∏ä‡πâ Local State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏¢‡πÉ‡∏ô Component',
            'üß© ‡πÉ‡∏ä‡πâ Global State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô'
          ]
        }
      ]
    },
    'api-integration': {
      title: 'API Integration: ‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API',
      content: [
        {
          subtitle: 'API ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?',
          description: 'API (Application Programming Interface) ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå',
          details: [
            'üåê API = ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏≠‡∏õ‡πÅ‡∏•‡∏∞‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå',
            'üì° ‡πÉ‡∏ä‡πâ HTTP methods (GET, POST, PUT, DELETE)',
            'üìä ‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON',
            'üîí ‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö Authentication ‡πÅ‡∏•‡∏∞ Authorization',
            '‚ö° ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å'
          ],
          code: `// ‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API
const fetchData = async () => {
  try {
    const response = await fetch('https://jsonplaceholder.typicode.com/posts');
    const data = await response.json();
    console.log(data);
  } catch (error) {
    console.error('‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  }
};

// ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
const createPost = async (postData) => {
  try {
    const response = await fetch('https://jsonplaceholder.typicode.com/posts', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(postData)
    });
    const data = await response.json();
    console.log('‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data);
  } catch (error) {
    console.error('‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  }
};`
        },
        {
          subtitle: 'Async/Await',
          description: 'Async/Await ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö Asynchronous ‡∏ó‡∏µ‡πà‡∏á‡πà‡∏≤‡∏¢‡∏Å‡∏ß‡πà‡∏≤ Promises',
          details: [
            'üîÑ Async = ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö Asynchronous',
            '‚è≥ Await = ‡∏£‡∏≠‡πÉ‡∏´‡πâ Promise ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô',
            'üìù ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏Å‡∏ß‡πà‡∏≤ Promises',
            'üéØ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error ‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢ try/catch',
            '‚ö° ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢'
          ]
        }
      ]
    },
    'firebase-basics': {
      title: 'Firebase: Backend-as-a-Service',
      content: [
        {
          subtitle: 'Firebase ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?',
          description: 'Firebase ‡πÄ‡∏õ‡πá‡∏ô Backend-as-a-Service (BaaS) ‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ Google',
          details: [
            'üî• Firebase = Backend-as-a-Service ‡∏à‡∏≤‡∏Å Google',
            'üì± ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö iOS, Android, Web ‡πÅ‡∏•‡∏∞ Flutter',
            '‚ö° Real-time Database ‡πÅ‡∏•‡∏∞ Cloud Firestore',
            'üîê Authentication ‡πÅ‡∏•‡∏∞ Security',
            '‚òÅÔ∏è Cloud Functions ‡πÅ‡∏•‡∏∞ Hosting',
            'üìä Analytics ‡πÅ‡∏•‡∏∞ Crashlytics'
          ],
          code: `// ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Firebase
import { initializeApp } from 'firebase/app';
import { getFirestore } from 'firebase/firestore';

const firebaseConfig = {
  apiKey: "your-api-key",
  authDomain: "your-project.firebaseapp.com",
  projectId: "your-project-id",
  storageBucket: "your-project.appspot.com",
  messagingSenderId: "123456789",
  appId: "your-app-id"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
export const db = getFirestore(app);`
        },
        {
          subtitle: '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á Firebase',
          description: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏ó‡∏µ‡πà Firebase ‡∏°‡∏µ‡πÉ‡∏´‡πâ',
          details: [
            'üóÑÔ∏è Firestore - NoSQL Database ‡πÅ‡∏ö‡∏ö Real-time',
            'üë§ Authentication - ‡∏£‡∏∞‡∏ö‡∏ö‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô',
            'üìÅ Storage - ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û',
            '‚öôÔ∏è Functions - Serverless Functions',
            'üìà Analytics - ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',
            'üö® Crashlytics - ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î'
          ]
        }
      ]
    }
  };

  const currentContent = theoryContent[section.id] || {
    title: section.title,
    content: [
      {
        subtitle: '‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤',
        description: '‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤',
        details: [
          'üìö ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ',
          'üéØ ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÅ‡∏≠‡∏õ‡∏ô‡∏µ‡πâ',
          'üí° ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å'
        ]
      }
    ]
  };

  return (
    <ScrollView style={{ flex: 1, backgroundColor: bgColor }}>
      <Box safeArea p={4}>
        {/* Header */}
        <VStack space={4} mb={6}>
          <HStack space={4} alignItems="center">
            <Pressable onPress={() => navigation.goBack()}>
              <Icon
                as={MaterialIcons}
                name="arrow-back"
                size="md"
                color={textColor}
              />
            </Pressable>
            <Box
              bg={topic.color}
              p={3}
              rounded="full"
              alignItems="center"
              justifyContent="center"
            >
              <Icon
                as={MaterialIcons}
                name={topic.icon}
                size="md"
                color="white"
              />
            </Box>
            <VStack flex={1}>
              <Text fontSize="2xl" fontWeight="bold" color={textColor}>
                {currentContent.title}
              </Text>
              <Text fontSize="md" color={subtitleColor}>
                {topic.title} - {topic.subtitle}
              </Text>
            </VStack>
          </HStack>
        </VStack>

        {/* Content */}
        <VStack space={4}>
          {currentContent.content.map((item, index) => (
            // Replace Card with Box styled as a card
            <Box
              key={index}
              bg={cardBgColor}
              rounded="md"
              shadow={1}
              borderWidth={1}
              borderColor={useColorModeValue('gray.200', 'gray.600')}
            >
              <Box px={4} py={3} borderBottomWidth={1} borderColor={useColorModeValue('gray.200', 'gray.600')}>
                <Heading size="md" color={textColor}>
                  {item.subtitle}
                </Heading>
              </Box>
              <Box px={4} py={4}>
                <VStack space={4}>
                  <Text fontSize="md" color={subtitleColor}>
                    {item.description}
                  </Text>
                  
                  {item.details && (
                    <VStack space={2}>
                      {item.details.map((detail, detailIndex) => (
                        <Text key={detailIndex} fontSize="sm" color={textColor}>
                          {detail}
                        </Text>
                      ))}
                    </VStack>
                  )}
                  
                  {item.code && (
                    <Box
                      bg={useColorModeValue('gray.100', 'gray.600')}
                      p={3}
                      rounded="md"
                    >
                      <Text fontSize="xs" fontFamily="monospace" color={textColor}>
                        {item.code}
                      </Text>
                    </Box>
                  )}
                </VStack>
              </Box>
            </Box>
          ))}
        </VStack>

        {/* Footer */}
        <Box mt={8} p={4} bg={cardBgColor} rounded="lg">
          <VStack space={3}>
            <Text fontSize="lg" fontWeight="bold" color={textColor}>
              üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö:
            </Text>
            <VStack space={2}>
              <Text fontSize="sm" color={subtitleColor}>
                ‚Ä¢ ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏§‡∏©‡∏é‡∏µ‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥ Workshop
              </Text>
              <Text fontSize="sm" color={subtitleColor}>
                ‚Ä¢ ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
              </Text>
              <Text fontSize="sm" color={subtitleColor}>
                ‚Ä¢ ‡∏ù‡∏∂‡∏Å‡∏ù‡∏ô‡πÅ‡∏•‡∏∞‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î
              </Text>
              <Text fontSize="sm" color={subtitleColor}>
                ‚Ä¢ ‡πÉ‡∏ä‡πâ Workshop ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á
              </Text>
            </VStack>
          </VStack>
        </Box>
      </Box>
    </ScrollView>
  );
};

export default TheoryDetailScreen; 